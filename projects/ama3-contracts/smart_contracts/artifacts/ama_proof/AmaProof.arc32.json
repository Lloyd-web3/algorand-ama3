{
    "hints": {
        "confirm_joined()void": {
            "call_config": {
                "no_op": "CALL"
            }
        }
    },
    "source": {
        "approval": "",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDEwCgpzbWFydF9jb250cmFjdHMuYW1hX3Byb29mLmNvbnRyYWN0LkFtYVByb29mLmNsZWFyX3N0YXRlX3Byb2dyYW06CiAgICAvLyBzbWFydF9jb250cmFjdHMvYW1hX3Byb29mL2NvbnRyYWN0LnB5OjUKICAgIC8vIGNsYXNzIEFtYVByb29mKEFSQzRDb250cmFjdCk6CiAgICBpbnQgMQogICAgcmV0dXJuCg=="
    },
    "state": {
        "global": {
            "num_byte_slices": 1,
            "num_uints": 2
        },
        "local": {
            "num_byte_slices": 0,
            "num_uints": 0
        }
    },
    "schema": {
        "global": {
            "declared": {
                "asset_url": {
                    "type": "bytes",
                    "key": "asset_url"
                },
                "max_viewer": {
                    "type": "uint64",
                    "key": "max_viewer"
                },
                "total_viewer": {
                    "type": "uint64",
                    "key": "total_viewer"
                }
            },
            "reserved": {}
        },
        "local": {
            "declared": {},
            "reserved": {}
        }
    },
    "contract": {
        "name": "AmaProof",
        "methods": [
            {
                "name": "confirm_joined",
                "args": [],
                "returns": {
                    "type": "void"
                }
            }
        ],
        "networks": {}
    },
    "bare_call_config": {
        "no_op": "CREATE"
    }
}